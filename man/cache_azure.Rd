% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_azure.R
\name{cache_azure}
\alias{cache_azure}
\title{Azure Storage Cache
Azure Storage backed cache, for remote caching. You can use either file, blob or ADLSgen2 storage.}
\usage{
cache_azure(
  cache_name,
  account,
  key = NULL,
  token = NULL,
  sas = NULL,
  algo = "sha512",
  compress = FALSE
)
}
\arguments{
\item{cache_name}{Name of the storage container for storing cache files.}

\item{account}{The storage account for the cache. This should be an object of class \code{\link[AzureStor::storage_endpoint]{AzureStor::storage_endpoint}}, or inheriting from it. Alternatively, you can provide the storage endpoint URL, along with one of the authentication arguments \code{key}, \code{token} or \code{sas}.}

\item{key}{The access key for the storage account.}

\item{token}{An Azure Active Directory (AAD) authentication token. This can be either a string, or an object of class \code{AzureToken} created by \code{\link[AzureAuth::get_azure_token]{AzureAuth::get_azure_token}}. The latter is the recommended way of doing it, as it allows for automatic refreshing of expired tokens.}

\item{sas}{A shared access signature (SAS) for the account.}

\item{algo}{The hashing algorithm used for the cache, see
\code{\link[digest]{digest}} for available algorithms.}

\item{compress}{Argument passed to \code{saveRDS}. One of FALSE, "gzip",
"bzip2" or "xz". Default: FALSE.}
}
\description{
Azure Storage Cache
Azure Storage backed cache, for remote caching. You can use either file, blob or ADLSgen2 storage.
}
\examples{

\dontrun{
library(AzureStor)

stor <- storage_container("https://blob.{accountname}.core.windows.net",
                          key="{storage-key}")

azcache <- cache_azure("cache_container", stor)
mem_runif <- memoise(runif, cache = azcache)


# alternative way of specifying the account
azcache <- cache_azure("cache_container", "https://blob.{accountname}.core.windows.net",
                       key="{storage_key}")
}


}
